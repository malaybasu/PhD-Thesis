%!PS-Adobe-2.0
%%Title: csid_1.ps
%%Creator: gnuplot 3.8i patchlevel 0
%%CreationDate: Tue Aug 27 23:14:55 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 251 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -26 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse } forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Myriad-Bold) findfont 80 scalefont setfont
1.000 UL
LTb
328 240 M
63 0 V
 stroke
280 240 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 20)]
] -26.7 MRshow
grestore
328 434 M
63 0 V
 stroke
280 434 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 40)]
] -26.7 MRshow
grestore
328 628 M
63 0 V
 stroke
280 628 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 60)]
] -26.7 MRshow
grestore
328 822 M
63 0 V
 stroke
280 822 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 80)]
] -26.7 MRshow
grestore
328 1016 M
63 0 V
 stroke
280 1016 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 100)]
] -26.7 MRshow
grestore
328 1210 M
63 0 V
 stroke
280 1210 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 120)]
] -26.7 MRshow
grestore
328 1404 M
63 0 V
 stroke
280 1404 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 140)]
] -26.7 MRshow
grestore
328 1598 M
63 0 V
 stroke
280 1598 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 160)]
] -26.7 MRshow
grestore
328 1792 M
63 0 V
 stroke
280 1792 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 180)]
] -26.7 MRshow
grestore
607 240 M
0 63 V
 stroke
607 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 0.75)]
] -26.7 MCshow
grestore
1010 240 M
0 63 V
 stroke
1010 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 1)]
] -26.7 MCshow
grestore
1414 240 M
0 63 V
 stroke
1414 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 1.25)]
] -26.7 MCshow
grestore
1817 240 M
0 63 V
 stroke
1817 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 1.5)]
] -26.7 MCshow
grestore
1.000 UL
LTb
328 240 M
1552 0 V
0 1552 V
-1552 0 V
328 240 L
 stroke
80 1016 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 80.0 0.0 true true 0 (b)]
[(Myriad-Bold) 80.0 0.0 true true 0 (-galactosidase activity \(Miller units\))]
] -26.7 MCshow
grestore
grestore
1104 40 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 (OD \(600 nm\))]
] -26.7 MCshow
grestore
1.000 UP
3.000 UL
LT0
386 402 M
13 0 V
13 0 V
12 1 V
13 0 V
13 0 V
13 0 V
12 0 V
13 0 V
13 0 V
13 1 V
12 0 V
13 0 V
13 -1 V
13 0 V
12 0 V
13 0 V
13 0 V
13 0 V
13 -1 V
12 0 V
13 -1 V
13 0 V
13 -1 V
12 0 V
13 -1 V
13 -1 V
13 -1 V
12 -1 V
13 -1 V
13 -1 V
13 -1 V
12 -1 V
13 -2 V
13 -1 V
13 -2 V
12 -2 V
13 -2 V
13 -2 V
13 -2 V
12 -2 V
13 -2 V
13 -2 V
13 -3 V
13 -2 V
12 -2 V
13 -3 V
13 -3 V
13 -2 V
12 -3 V
13 -3 V
13 -3 V
13 -2 V
12 -3 V
13 -3 V
13 -3 V
13 -3 V
12 -3 V
13 -3 V
13 -3 V
13 -3 V
12 -3 V
13 -3 V
13 -3 V
13 -3 V
12 -2 V
13 -3 V
13 -3 V
13 -3 V
13 -3 V
12 -2 V
13 -3 V
13 -3 V
13 -2 V
12 -3 V
13 -2 V
13 -2 V
13 -2 V
12 -2 V
13 -1 V
13 -1 V
13 -1 V
12 0 V
13 0 V
13 1 V
13 2 V
12 2 V
13 3 V
13 4 V
13 4 V
12 6 V
13 6 V
13 7 V
13 8 V
12 9 V
13 9 V
13 10 V
13 10 V
13 11 V
12 10 V
0.750 UP
0.500 UL
LT1
386 402 BoxW
830 387 BoxW
1312 288 BoxW
1549 302 BoxW
1649 375 BoxW
3.000 UL
LT2
328 1727 M
7 6 V
7 5 V
7 6 V
7 5 V
8 5 V
7 5 V
7 5 V
7 4 V
7 4 V
7 4 V
7 3 V
7 3 V
7 2 V
7 1 V
8 1 V
7 0 V
7 -1 V
7 -1 V
7 -2 V
7 -3 V
7 -4 V
7 -5 V
7 -6 V
8 -7 V
7 -8 V
7 -8 V
7 -9 V
7 -10 V
7 -10 V
7 -11 V
7 -12 V
7 -12 V
7 -12 V
8 -13 V
7 -13 V
7 -13 V
7 -13 V
7 -14 V
7 -13 V
7 -14 V
7 -13 V
7 -14 V
8 -13 V
7 -13 V
7 -13 V
7 -12 V
7 -13 V
7 -11 V
7 -11 V
7 -11 V
7 -10 V
7 -10 V
8 -8 V
7 -9 V
7 -7 V
7 -7 V
7 -6 V
7 -5 V
7 -5 V
7 -5 V
7 -4 V
8 -3 V
7 -3 V
7 -2 V
7 -2 V
7 -1 V
7 0 V
7 -1 V
7 1 V
7 0 V
7 1 V
8 2 V
7 2 V
7 2 V
7 2 V
7 3 V
7 4 V
7 3 V
7 4 V
7 4 V
8 5 V
7 5 V
7 5 V
7 5 V
7 5 V
7 6 V
7 6 V
7 6 V
7 6 V
7 6 V
8 7 V
7 6 V
7 7 V
7 7 V
7 7 V
7 6 V
7 7 V
7 7 V
7 7 V
0.750 UP
0.500 UL
LT3
328 1727 CircW
480 1773 CircW
696 1430 CircW
1031 1504 CircW
3.000 UL
LT4
617 380 M
13 -6 V
12 -6 V
13 -6 V
13 -7 V
13 -6 V
12 -6 V
13 -6 V
13 -6 V
13 -6 V
12 -5 V
13 -6 V
13 -5 V
13 -6 V
12 -5 V
13 -5 V
13 -5 V
13 -5 V
12 -4 V
13 -4 V
13 -5 V
13 -3 V
12 -4 V
13 -4 V
13 -3 V
13 -3 V
13 -2 V
12 -3 V
13 -2 V
13 -1 V
13 -2 V
12 -1 V
13 -1 V
13 0 V
13 0 V
12 0 V
13 1 V
13 1 V
13 2 V
12 1 V
13 3 V
13 3 V
13 3 V
12 4 V
13 4 V
13 5 V
13 5 V
12 6 V
13 6 V
13 6 V
13 8 V
13 8 V
12 8 V
13 9 V
13 10 V
13 10 V
12 10 V
13 12 V
13 12 V
13 12 V
12 14 V
13 14 V
13 14 V
13 16 V
12 15 V
13 17 V
13 17 V
13 18 V
12 18 V
13 18 V
13 20 V
13 19 V
12 20 V
13 20 V
13 21 V
13 21 V
13 22 V
12 21 V
13 22 V
13 22 V
13 23 V
12 22 V
13 23 V
13 23 V
13 23 V
12 23 V
13 23 V
13 23 V
13 24 V
12 23 V
13 23 V
13 23 V
13 23 V
12 23 V
13 23 V
13 22 V
13 23 V
12 22 V
13 23 V
13 23 V
0.750 UP
0.500 UL
LT5
617 380 TriUW
1396 419 TriUW
1786 1050 TriUW
1880 1217 TriUW
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Myriad-Bold,8 Symbol Myriad-Bold
%%Pages: 1
