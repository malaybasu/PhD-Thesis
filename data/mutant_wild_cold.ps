%!PS-Adobe-2.0
%%Title: mutant_wild_cold.ps
%%Creator: gnuplot 3.8i patchlevel 0
%%CreationDate: Sat Sep 14 22:38:22 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 327 446
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -26 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse } forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Myriad-Bold) findfont 80 scalefont setfont
1.000 UL
LTb
376 240 M
63 0 V
 stroke
328 240 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 0)]
] -26.7 MRshow
grestore
376 523 M
63 0 V
 stroke
328 523 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 0.25)]
] -26.7 MRshow
grestore
376 805 M
63 0 V
 stroke
328 805 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 0.5)]
] -26.7 MRshow
grestore
376 1088 M
63 0 V
 stroke
328 1088 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 0.75)]
] -26.7 MRshow
grestore
376 1370 M
63 0 V
 stroke
328 1370 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 1)]
] -26.7 MRshow
grestore
376 1653 M
63 0 V
 stroke
328 1653 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 1.25)]
] -26.7 MRshow
grestore
376 1935 M
63 0 V
 stroke
328 1935 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 1.5)]
] -26.7 MRshow
grestore
376 2218 M
63 0 V
 stroke
328 2218 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 1.75)]
] -26.7 MRshow
grestore
376 2500 M
63 0 V
 stroke
328 2500 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 2)]
] -26.7 MRshow
grestore
376 240 M
0 63 V
 stroke
376 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 0)]
] -26.7 MCshow
grestore
753 240 M
0 63 V
 stroke
753 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 10)]
] -26.7 MCshow
grestore
1129 240 M
0 63 V
 stroke
1129 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 20)]
] -26.7 MCshow
grestore
1506 240 M
0 63 V
 stroke
1506 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 30)]
] -26.7 MCshow
grestore
1883 240 M
0 63 V
 stroke
1883 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 40)]
] -26.7 MCshow
grestore
2259 240 M
0 63 V
 stroke
2259 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 50)]
] -26.7 MCshow
grestore
2636 240 M
0 63 V
 stroke
2636 160 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 ( 60)]
] -26.7 MCshow
grestore
1.000 UL
LTb
376 240 M
2260 0 V
0 2260 V
-2260 0 V
376 240 L
 stroke
80 1370 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Myriad-Bold) 80.0 0.0 true true 0 (OD \(600 nm\))]
] -26.7 MCshow
grestore
grestore
1506 40 M
gsave 0 setgray
[ [(Myriad-Bold) 80.0 0.0 true true 0 (Time \(h\))]
] -26.7 MCshow
grestore
1.000 UP
3.000 UL
LT0
376 246 M
21 1 V
21 1 V
21 1 V
21 2 V
21 1 V
21 1 V
20 2 V
21 1 V
21 1 V
21 1 V
21 2 V
21 1 V
21 1 V
21 2 V
21 1 V
21 1 V
21 2 V
21 1 V
21 1 V
21 2 V
20 1 V
21 2 V
21 1 V
21 1 V
21 2 V
21 1 V
21 2 V
21 1 V
21 2 V
21 1 V
21 2 V
21 2 V
21 1 V
20 2 V
21 1 V
21 2 V
21 2 V
21 2 V
21 1 V
21 2 V
21 2 V
21 2 V
21 2 V
21 2 V
21 2 V
21 3 V
21 3 V
20 4 V
21 5 V
21 5 V
21 7 V
21 7 V
21 9 V
21 10 V
21 11 V
21 13 V
21 14 V
21 16 V
21 18 V
21 20 V
20 21 V
21 24 V
21 26 V
21 27 V
21 28 V
21 28 V
21 30 V
21 31 V
21 35 V
21 40 V
21 45 V
21 50 V
21 53 V
21 54 V
20 54 V
21 52 V
21 55 V
21 58 V
21 65 V
21 75 V
21 85 V
21 89 V
21 82 V
21 76 V
21 70 V
21 62 V
21 56 V
20 50 V
21 45 V
21 44 V
21 45 V
21 43 V
21 36 V
21 26 V
21 20 V
21 17 V
21 15 V
21 14 V
21 13 V
0.700 UP
0.500 UL
LT1
376 246 BoxW
1242 306 BoxW
1657 484 BoxW
1751 604 BoxW
1845 756 BoxW
1939 988 BoxW
2052 1317 BoxW
2090 1474 BoxW
2203 1845 BoxW
2259 1968 BoxW
2316 2082 BoxW
2372 2145 BoxW
2448 2197 BoxW
3.000 UL
LT2
376 242 M
21 0 V
21 -1 V
21 0 V
21 0 V
21 -1 V
10 0 V
247 0 R
15 0 V
21 1 V
21 1 V
20 1 V
21 1 V
21 1 V
21 1 V
21 1 V
21 2 V
21 2 V
21 2 V
21 2 V
21 2 V
21 2 V
21 3 V
21 3 V
20 3 V
21 3 V
21 4 V
21 3 V
21 4 V
21 5 V
21 4 V
21 5 V
21 5 V
21 5 V
21 5 V
21 6 V
21 6 V
21 6 V
20 6 V
21 7 V
21 7 V
21 7 V
21 8 V
21 7 V
21 8 V
21 8 V
21 8 V
21 9 V
21 9 V
21 9 V
21 9 V
20 9 V
21 10 V
21 11 V
21 13 V
21 16 V
21 21 V
21 25 V
21 28 V
21 28 V
21 25 V
21 22 V
21 21 V
21 25 V
21 33 V
20 46 V
21 58 V
21 60 V
21 57 V
21 55 V
21 52 V
21 51 V
21 51 V
21 52 V
21 54 V
21 57 V
21 62 V
21 67 V
20 74 V
21 77 V
21 78 V
21 72 V
21 63 V
21 49 V
21 36 V
21 30 V
21 33 V
21 38 V
21 41 V
21 43 V
0.700 UP
0.500 UL
LT3
376 242 CircW
1242 298 CircW
1657 442 CircW
1751 504 CircW
1845 622 CircW
1939 749 CircW
1977 852 CircW
2052 1051 CircW
2203 1462 CircW
2316 1840 CircW
2372 1932 CircW
2448 2074 CircW
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Myriad-Bold
%%Pages: 1
